<?xml version="1.0" encoding="UTF-8"?>
<MF0 version="1.1" packageUris="http://schema.mathworks.com/mf0/SlsaMaskTree/R2020a">
  <slsa.mm.maskTree.MaskTree type="slsa.mm.maskTree.MaskTree" uuid="e30e3219-5591-4c83-b364-d59295a9cc12">
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="c108bae4-4f8f-4ec4-bb3d-65c9f3bc7ed4">
      <blockPath>Soundtest/Ambulance_Detectors/Ambulance_Detector_2/Comparator</blockPath>
      <id>Soundtest:134</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="2d0b4958-4100-4953-80ec-6df797459696">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="aff9434b-6d0f-4386-a887-89602f80c9ef">
          <expression>&gt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="6d528345-2657-4167-bc89-de16a9d00f55">
          <evaluate>true</evaluate>
          <expression>0.8</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="45105e3d-f6b6-4f06-ab05-56d190f32e80">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="916fe5c5-1c4c-4446-9614-cfb93a1bd4d7">
          <expression>off</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="e693d919-df79-455c-96df-b04a1b1dd0c9">
      <blockPath>Soundtest/Ambulance_Detectors/Ambulance_Detector_3/Comparator</blockPath>
      <id>Soundtest:142</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="f0b40cb2-a000-494d-a805-aeca3bd9be88">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="46be52b2-c795-49a6-ae47-d58259679980">
          <expression>&gt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="12e02d81-b483-49a8-bb5f-f26878fc440b">
          <evaluate>true</evaluate>
          <expression>0.8</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ff5a0a4d-f7b5-4add-8dc1-9a3a23918151">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d7b52549-1d0d-42bc-a9b5-a57ae842d21e">
          <expression>off</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="0b33e983-c745-48d1-9641-6136b64948e3">
      <blockPath>Soundtest/Ambulance_Detectors/Ambulance_Detector_4/Comparator</blockPath>
      <id>Soundtest:150</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="6b06c8be-87ca-4e76-9a81-d1b128de53c5">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="02bd24a2-257a-4a4e-a741-250eb5c069d6">
          <expression>&gt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7ca07fb3-56d2-4fc3-93b4-c792964a805b">
          <evaluate>true</evaluate>
          <expression>0.8</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="28baee0a-04b3-4f95-8083-d5ca8b9b9ada">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b84e2d57-edf7-49b1-a53b-f31745cc3f95">
          <expression>off</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="25a04d0c-b667-470c-81cc-403121341fbf">
      <blockPath>Soundtest/Input_Sensors/Sensor_1</blockPath>
      <id>Soundtest:2</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="aee42626-1dba-4381-b85a-6b71ac99e02f">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="9f3c56c8-48fa-4d1a-8398-7cf80491dcda">
          <name>SFcnInputFilename</name>
          <value>AAFJTQAAAAAOAAAAgAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABMAAAAAQAAAAAAAAAQAAAATAAAAEQ6XFRlY2huaWNhbCBTb2Z0d2FyZXNcTWFqb3QgUHJvamVjdFxbTU9OT11UcmFmZmljIFNvdW5kK0FtYiBFZmZlY3QtMzIway5tcDMAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="0c487d5a-171b-4ab1-8edd-2697c1dad9be">
          <name>arConverterPath</name>
          <value>AAFJTQAAAAAOAAAAiAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABTAAAAAQAAAAAAAAAQAAAAUwAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb3NsY29udmVydGVyAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="9b796995-a1fb-4af5-ab5d-11a80fe5d987">
          <name>computedAudioFrameSize</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="70287ab8-d3d7-42f1-95a3-666cd15c5cd5">
          <name>multimediaFileInfo</name>
          <value>AAFJTQAAAAAOAAAAoAQAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAFAAQAEwAAAAEAAADkAAAAaGFzQXVkaW8AAAAAAAAAAAAAAGhhc1ZpZGVvAAAAAAAAAAAAAABhdWRpb1BsdWdpblBhdGgAAAAAYXVkaW9Db252ZXJ0ZXJQYXRoAGF1ZGlvU2FtcGxlUmF0ZQAAAABhdWRpb051bUNoYW5uZWxzAAAAYXVkaW9Gb3JtYXQAAAAAAAAAAGlzQXVkaW9Db21wcmVzc2VkAABhdWRpb0JpdFJhdGUAAAAAAAAAYXVkaW9OdW1CaXRzAAAAAAAAAGF1ZGlvSXNGbG9hdAAAAAAAAAB1c2VNTVJlYWRlcgAAAAAAAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADAAAAAGAAAACAAAAAkCAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAAAgABAAAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAADgAAAIgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAAUwAAAAEAAAAAAAAAEAAAAFMAAABDOlxQcm9ncmFtIEZpbGVzXE1BVExBQlxSMjAyMWFcdG9vbGJveFxzaGFyZWRcbXVsdGltZWRpYVxiaW5cd2luNjRcYXVkaW9zbGNvbnZlcnRlcgAAAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAAAAAAAAAHDnQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAA8D8OAAAAMAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAADAAAAAQAAAAAAAAAQAAMATVAzAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAACTGARWDi1YQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAAQEAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAQAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="0b100315-6d27-4ea9-bc89-7039ffa7932e">
          <name>outputStreamsStr</name>
          <value>AAFJTQAAAAAOAAAAQAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAAKAAAAAQAAAAAAAAAQAAAACgAAAEF1ZGlvIG9ubHkAAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="71be8886-d492-466b-86aa-2a1282b71eb4">
          <name>pluginPaths</name>
          <value>AAFJTQAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="bb615ea1-3ef4-4eed-88d2-5e9fb673031f">
          <name>readRangeEnd</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAOBD</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="df98aa00-84ec-4d82-acb0-b0a00f5719a5">
          <name>readRangeStart</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f42a714f-42bd-4993-a5b1-7f5ebd07ac0f">
          <expression>D:\Technical Softwares\Majot Project\[MONO]Traffic Sound+Amb Effect-320k.mp3</expression>
          <name>inputFilename</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f06d8e4d-51fa-4b44-817f-b8baefd5c852">
          <evaluate>true</evaluate>
          <expression>[1 Inf]</expression>
          <name>readRange</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a310147c-fd8a-4f79-a188-5be85de7eb2f">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>loop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="95a33b13-2164-4a00-aae3-11dfe619aa64">
          <evaluate>true</evaluate>
          <expression>inf</expression>
          <name>numPlays</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7dfe373e-532d-4953-8d28-37f32ab2de20">
          <expression>Audio only</expression>
          <name>outputStreams</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ceb7304c-d32e-4d4e-be51-178fc241d0b7">
          <expression>single</expression>
          <name>videoDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5fd6a402-36f3-4432-93b9-258921839b5e">
          <expression>double</expression>
          <name>audioDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="fdb20a30-5ea7-49bf-8aed-8ae605b9d963">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>inheritSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f8051106-0aa6-4efb-bf26-ab9ce23bf68e">
          <evaluate>true</evaluate>
          <expression>1/30</expression>
          <name>userDefinedSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="95154701-2a1f-4498-8733-1bf9833a4a69">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>noAudioOutput</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="aea78353-ed34-4ec3-a444-547b0fb44653">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>isIntensityVideo</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4f1b4cec-f73c-4972-82c2-12dc81886479">
          <expression>RGB</expression>
          <name>fourcc</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2ca4c909-d5bc-4401-8d26-5e792d12c061">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <name>colorVideoFormat</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ff0a1bff-1ed9-44cd-a5b7-19bd84f58afa">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>outputEOF</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ee33e02b-3c52-4bb7-8acc-8a80ac2fd029">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>dataOrg</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8016caf1-8765-4b76-a904-c41d04865770">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>audioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="bfe6743e-4e84-4193-a638-e05f29ed0c3f">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>computeAudioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="75f6e7a3-22bc-47af-be13-f5fc4f3c30f1">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>outSamplingMode</name>
        </dialogParameters>
        <initializationCode>blk = gcb;
[SFcnInputFilename multimediaFileInfo computedAudioFrameSize iconString fourcc pluginPaths arConverterPath, outputStreamsStr,readRangeStart,readRangeEnd] = ...
    dspmaskFromMultimediaFile(&apos;init&apos;, blk, userDefinedSampleTime);
set_param(blk, &apos;MaskDisplay&apos;, iconString);</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="342d486f-8cb0-4cc6-a3f1-7534a33bd881">
      <blockPath>Soundtest/Ambulance_Detectors/Ambulance_Detector_1/Comparator</blockPath>
      <id>Soundtest:24</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="531bc753-1650-4d1d-be7e-e6f844f89741">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="53c0517e-8a50-434b-8ae3-35f2f628f7b4">
          <expression>&gt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d2ea8edd-0166-4008-873d-82947a43f818">
          <evaluate>true</evaluate>
          <expression>0.8</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ee954e9b-9835-4347-b1eb-a5cb2ac4d55c">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e373d6d1-f6fc-44f0-9d09-2c61f017dbe7">
          <expression>off</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="88005568-4dd7-4b58-9f49-3babb16362a6">
      <blockPath>Soundtest/To Multimedia File</blockPath>
      <id>Soundtest:5</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="9c93b6fd-99c1-445b-80c7-55564eec841a">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="352eff2b-fc54-4b41-be78-ff29de3cbecb">
          <expression>C:\Users\PS\MATLAB\Projects\TrafficProject\output3.wav</expression>
          <name>outputFilename</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a16b9249-881a-4b42-a1ef-ea8e1f226329">
          <expression>Audio only</expression>
          <name>streamSelection</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="89b030ad-2601-41bd-a3ac-fdda8e077692">
          <expression>None (uncompressed)</expression>
          <name>videoCompressor</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="832ba85e-d21f-4cff-b788-8055dfc4328e">
          <expression>None (uncompressed)</expression>
          <name>audioCompressor</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b0afafe6-03ba-4eb6-80bb-75dfd42948ed">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <name>imagePorts</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ce13a3f6-5098-442c-bb1a-80c84aac1704">
          <expression>WAV</expression>
          <name>fileType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="441c6d35-22fb-403f-9c0c-a94173e48228">
          <expression>16-bit integer</expression>
          <name>audioDatatype</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2a4007fa-ebe5-4eb6-9d53-5073741640c0">
          <expression>RGB</expression>
          <name>fourcc</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2e2eb24f-402e-403d-8eec-7bbe0911b001">
          <evaluate>true</evaluate>
          <expression>75</expression>
          <name>videoQuality</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4c93f69b-fe26-4f67-89d2-5284d2460a74">
          <evaluate>true</evaluate>
          <expression>10</expression>
          <name>mj2000CompFactor</name>
        </dialogParameters>
        <initializationCode>[iconString avPluginPath avConverterPath avFilterPath outputStreamsStr audioDatatypeStr] = dspmaskToMultimediaFile(&apos;init&apos;);
set_param(gcb, &apos;MaskDisplay&apos;, iconString);
</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="57880a42-29e4-4f7b-9d6c-cfb51ec81beb">
      <blockPath>Soundtest/Traffic System/Counter</blockPath>
      <childrenIds>Soundtest:501:213</childrenIds>
      <childrenIds>Soundtest:501:215</childrenIds>
      <id>Soundtest:501</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="1b238e2b-fe06-4c8f-9d53-b10cdf4d64c0">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="a2209331-6977-4baf-a231-98d4ff6eb25e">
          <name>freerun</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="534131b2-dfa6-4e1a-8eec-af8738a99ea4">
          <name>maxval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAD9A</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="d202c6fe-8d33-4195-b31d-9bab7eee1eca">
          <name>minval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="37bd2962-8b70-4cc3-b541-25063f18d94f">
          <name>modulo</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="f352dec1-0cef-4eeb-95e0-c4a72a171552">
          <name>modval</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAHBA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="15429e09-21b1-4e3c-b782-2e26e2f0d41a">
          <name>threshold_add</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAA4G9A</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="59567923-8393-4aba-b6c6-2b72fa7b071a">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <isTunable>true</isTunable>
          <name>CountType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="0b5304cd-e72f-4d61-b985-14425c7cd3c7">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountInit</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="44bba49d-870d-401a-802e-354e73784a4a">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountStep</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d4089f8c-722e-4771-938a-8233093d30b2">
          <evaluate>true</evaluate>
          <expression>31</expression>
          <isTunable>true</isTunable>
          <name>CountMax</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="bcd9a708-25b6-467e-afdd-e901e41f661a">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountFromType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4ecbe474-52d8-4e4d-a9d5-81e066f1c160">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFrom</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ece21f3d-e121-4aea-9e5d-384c5ef281f4">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountResetPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9a9f662d-968e-41cf-bfc0-b505f408388e">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountLoadPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="636e7e4b-f19e-414e-ae13-5424c1ec27d0">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountEnbPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="340d5927-6b22-4fbd-bbf9-844e772dec6b">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountDirPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="73ab1b1e-bd97-424f-acb5-6e6a259b08ef">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountHitOutputPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a51a41d5-c642-4d86-93d7-93ad5797ea04">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b8cb71ed-4a01-4540-bb90-f19bcfb8cdc9">
          <evaluate>true</evaluate>
          <expression>8</expression>
          <isTunable>true</isTunable>
          <name>CountWordLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2a6e23b8-040d-464e-95f3-b04a54929e0b">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFracLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ba5ed4e6-0bcf-4ce7-a02c-4c349c1778d3">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountSampTime</name>
        </dialogParameters>
        <initializationCode>issigned = double(strcmp(get_param(gcb, &apos;CountDataType&apos;), &apos;Signed&apos;));
[maxval_sc,freerun,  samptime, threshold_add, modval,  minval_sc, modulo] = hdlblkmask_counter;</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="fed27040-d90b-4e5d-a231-ba557167d5f6">
      <blockPath>Soundtest/Traffic System/Counter/Sub_wrap/Compare To Constant</blockPath>
      <id>Soundtest:501:213</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="f26e140b-976a-4255-bf59-2bc1937d88fd">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="96fce710-2e37-483f-8b43-0095b6616f46">
          <expression>&lt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d16d2353-28a0-407f-a409-32429d2331c3">
          <evaluate>true</evaluate>
          <expression>minval_sc</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="8a732ce4-1f4c-41ea-837e-4038e785a93a">
            <name>minval_sc</name>
            <value></value>
            <workspace>Soundtest:501</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f86cee8a-e9a9-44f3-b805-62906bed13bc">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="3a30824f-0cde-4eda-9739-e5a3a7c91fb7">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:501</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="d7a2e38c-4c33-4216-a29b-f9614d34ea63">
      <blockPath>Soundtest/Traffic System/Counter/Add_wrap/Compare To Constant</blockPath>
      <id>Soundtest:501:215</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="db02037d-e950-4a2d-9d1a-7e42b1b651f3">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="30547dce-5487-456f-a701-c56648f4db7b">
          <expression>&gt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="30ab005c-f98f-4121-b4bb-1e42297c4e40">
          <evaluate>true</evaluate>
          <expression>threshold_add</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="e928dd16-9fed-4479-b2e6-d610587149da">
            <name>threshold_add</name>
            <value></value>
            <workspace>Soundtest:501</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7f5630cb-da2d-4421-a9a4-7d95e03f9370">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="495da9fb-00e3-4802-9503-54ce8638c4a1">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:501</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="a81e042f-f25f-4e01-b02b-1d81820b5d1e">
      <blockPath>Soundtest/Traffic System/Reset_7</blockPath>
      <id>Soundtest:514</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="bd7abf53-fb0f-4856-bc02-b794cbac8ef1">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="96435632-9a47-4ea2-9d92-a03979f8ad25">
          <expression>==</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="399ae87e-75c5-47d7-9ef9-95cae3c4da1d">
          <evaluate>true</evaluate>
          <expression>31</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2400433e-4c2c-4f25-9f2c-31cbadb9f30d">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="c2c556f4-93f4-478f-92ae-84e099d7f495">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="38213e82-bc2d-439e-bf6b-efdf8b8c579d">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Comparator_1</blockPath>
      <id>Soundtest:520</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="94e42d6b-9d9d-4afc-b1d8-8636b03e7263">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ddc88cc5-60ff-4c06-93cd-6e19a46b1969">
          <expression>&gt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="38252f3a-5de3-4a04-87bc-34a1d902599c">
          <evaluate>true</evaluate>
          <expression>7</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="0d47bece-1ad3-4ea6-992f-506bc091207b">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8290a337-a05b-46ba-a437-238db2135a9e">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="97110807-5119-4b6f-a09a-27f1981d1474">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Comparator_2</blockPath>
      <id>Soundtest:521</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="d6e6963f-3253-4753-9557-a2060318e902">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5213e2ad-2ee7-49d7-8edc-6100c19d1570">
          <expression>&lt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="dbfd62b4-9d52-4010-9e95-7d8393d947fb">
          <evaluate>true</evaluate>
          <expression>16</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b88c020f-2f05-45c0-9f5b-9852773c71a2">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="94249019-62d9-4e98-a3b0-d1449985ba04">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="db5318d6-4f53-4a5d-a7ab-b3ff2ee35bcb">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Comparator_3</blockPath>
      <id>Soundtest:522</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="d9ba4067-d4c7-48ac-8e9c-d76d5e80c6eb">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="10e62b83-650f-4665-a3b9-629c7bcb64a8">
          <expression>&lt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ac50f32b-f4f7-42ad-88eb-bec1c8854819">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b152954d-909e-4aab-908e-2d22f01ba023">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b86cc60f-590e-4940-9d15-798d2bf612b0">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="bcfa8a1a-f0ad-4a55-a4a9-0603ecb907dc">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Comparator_4</blockPath>
      <id>Soundtest:523</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="96ebe9b9-6c5a-4016-8044-e5daeabff3ba">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="c6a012c5-d155-4b0a-ac66-ebbd699f5b52">
          <expression>&lt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="195920e0-85ab-481c-a5e0-ccc152b98d8d">
          <evaluate>true</evaluate>
          <expression>9</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e41d41ac-3f13-406a-8b75-46483095344d">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4e0cfc66-0513-4149-8166-dda60b47d1c8">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="6494f423-a2df-4dcb-986d-cec1d944ea1e">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Post_1</blockPath>
      <childrenIds>Soundtest:528:213</childrenIds>
      <childrenIds>Soundtest:528:215</childrenIds>
      <id>Soundtest:528</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="ae133059-9e46-4251-b255-af9d0d155a2c">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="3da4e442-608e-4718-aa45-7802e72fd224">
          <name>freerun</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="b6f44f26-6bbc-42b1-a546-7ecdc297033e">
          <name>maxval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAABxA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="06c0f776-7709-47cd-a622-0771d79c05e4">
          <name>minval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="d9fb86eb-f070-4deb-a5df-ed2149b763f1">
          <name>modulo</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="ebfeacd0-2696-41e8-9e1b-4b927a914411">
          <name>modval</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAHBA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="78d605fd-96fc-4c9e-b874-ba63715e6aa9">
          <name>threshold_add</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAA4G9A</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="417f580d-6588-4458-9c69-08b4f743b1cd">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <isTunable>true</isTunable>
          <name>CountType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="69887f92-276d-4f73-b2ad-744a92e31de4">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountInit</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e0d59d68-837d-4a3f-9b8d-a89fc455e17f">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountStep</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="1327e9b5-559e-45de-be47-5c260980916f">
          <evaluate>true</evaluate>
          <expression>7</expression>
          <isTunable>true</isTunable>
          <name>CountMax</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a6a1d4d1-46aa-45f0-921a-0170875cb96b">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountFromType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="fe674df4-69a4-4a61-9fc8-144f3a66d9d7">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFrom</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="3658c73a-1319-4ac3-9caa-e267686ae1ce">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountResetPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5ea00f47-a8bc-4dab-9c7b-c5f64e7e8b22">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountLoadPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="63a88c15-c770-4e13-aea9-817112d3d8f6">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountEnbPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="fa6195fb-a784-454d-91ce-3b048780ee7e">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountDirPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9aedd4fe-143c-476f-84b5-215ffde6b8c6">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountHitOutputPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="c4596029-aa2d-48c6-acdb-7d9ccaf169c3">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2b7646e8-9e29-41d3-857d-288aa408affc">
          <evaluate>true</evaluate>
          <expression>8</expression>
          <isTunable>true</isTunable>
          <name>CountWordLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="554e035e-a3b3-43e1-ac5a-9f4892555ba1">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFracLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8f04a37e-5ee4-431d-8aa6-9b797e05fc1a">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountSampTime</name>
        </dialogParameters>
        <initializationCode>issigned = double(strcmp(get_param(gcb, &apos;CountDataType&apos;), &apos;Signed&apos;));
[maxval_sc,freerun,  samptime, threshold_add, modval,  minval_sc, modulo] = hdlblkmask_counter;</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="08816194-eeb7-4d55-8f10-8bf66d83438e">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Post_1/Sub_wrap/Compare To Constant</blockPath>
      <id>Soundtest:528:213</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="2953f9b9-16d5-448b-8742-a2552214e356">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="3ac199f4-614b-4370-b7ba-b4644cad1f80">
          <expression>&lt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b91fae9a-a26a-4ffc-b9aa-6b9411e16598">
          <evaluate>true</evaluate>
          <expression>minval_sc</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="912c6513-8390-477e-8279-91222a9334f2">
            <name>minval_sc</name>
            <value></value>
            <workspace>Soundtest:528</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b547f2df-39b3-46e9-af1c-5ee2b985769e">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="bc38d62d-f43b-45b8-b040-a52997befce2">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:528</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="faba622a-f1d0-4a0f-bbce-7558ec69d6b0">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Post_1/Add_wrap/Compare To Constant</blockPath>
      <id>Soundtest:528:215</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="52fc4111-72d5-44cb-b3f0-a6c6fe1606c3">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2bd435e8-45a6-433d-9844-432f4202d24a">
          <expression>&gt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2ca302f0-3862-450f-8152-3c77f826c643">
          <evaluate>true</evaluate>
          <expression>threshold_add</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="674bf8e2-4aa9-4b97-b661-f502d4efa1a4">
            <name>threshold_add</name>
            <value></value>
            <workspace>Soundtest:528</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4f0b243c-4b24-4804-abb1-d5c93d4f23f9">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="800a2581-659e-41e5-adfa-45232de05962">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:528</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="12230bc2-eee0-4182-9208-76bd6f4ebe89">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Post_2</blockPath>
      <childrenIds>Soundtest:529:213</childrenIds>
      <childrenIds>Soundtest:529:215</childrenIds>
      <id>Soundtest:529</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="3ea22f19-ab4c-45be-8e4f-de00dd4c792b">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="a168de09-a948-4107-b741-11f125ecc536">
          <name>freerun</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="5ef147c2-c1b9-474b-8daf-907c2bfdd16e">
          <name>maxval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAADBA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="4b3965c1-56af-4388-bebf-879c5e302f91">
          <name>minval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="8f7cc2e5-d1cc-4c91-b153-6d4c2fa50214">
          <name>modulo</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="107d2b52-bd56-4e9a-a2f6-d0e550738f52">
          <name>modval</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAHBA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="91d3763e-b268-43fd-917e-61c529a095c3">
          <name>threshold_add</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAA4G9A</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7e1fd9a8-e414-43d3-a1ad-583b579961d0">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <isTunable>true</isTunable>
          <name>CountType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="01792b85-951d-41ee-9b3b-ca4e8b078df5">
          <evaluate>true</evaluate>
          <expression>9</expression>
          <isTunable>true</isTunable>
          <name>CountInit</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ef83f2d1-49e7-4f5f-ab73-4455f205cdf0">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountStep</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8c0277a7-1c9d-4254-bade-d4cc3dbd0edb">
          <evaluate>true</evaluate>
          <expression>16</expression>
          <isTunable>true</isTunable>
          <name>CountMax</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f4b4c692-2715-4acc-a265-4ef0935d0a99">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountFromType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b1cfdcec-ac1a-46a1-83e7-b1424a71441f">
          <evaluate>true</evaluate>
          <expression>9</expression>
          <isTunable>true</isTunable>
          <name>CountFrom</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="266a0919-8631-448e-bbbc-588641ec13d2">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountResetPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="59267024-fa22-4335-91a7-385a0c881e6a">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountLoadPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="101a1acf-8c65-4594-8d79-35696ba4098c">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountEnbPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a560e80b-296c-4bc0-ba5c-6640123c2d17">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountDirPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4aa83bd3-a09e-4b9d-bf32-acd57eea53b7">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountHitOutputPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="615557e6-9cc9-4e7f-9174-1db414ba211a">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="3f71c8d7-fe26-4364-a7b8-ef723737ac3e">
          <evaluate>true</evaluate>
          <expression>8</expression>
          <isTunable>true</isTunable>
          <name>CountWordLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="aba1cd46-bb6b-4832-b0fe-c551191585dd">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFracLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b57a6ab6-71c9-435a-81ca-77163dd39a0c">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountSampTime</name>
        </dialogParameters>
        <initializationCode>issigned = double(strcmp(get_param(gcb, &apos;CountDataType&apos;), &apos;Signed&apos;));
[maxval_sc,freerun,  samptime, threshold_add, modval,  minval_sc, modulo] = hdlblkmask_counter;</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="aa3f3549-0364-41e6-8c2e-dda3b7eb196d">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Post_2/Sub_wrap/Compare To Constant</blockPath>
      <id>Soundtest:529:213</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="6e0ff95c-2fb8-4e19-ab77-0f4de3bfbfc6">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="909b996f-6dd3-4570-8b45-7e264f7ac464">
          <expression>&lt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="144eadc2-6d8d-4244-8119-30f8c646edfa">
          <evaluate>true</evaluate>
          <expression>minval_sc</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="29e00e92-0bcb-41c7-8893-aa16074dc51d">
            <name>minval_sc</name>
            <value></value>
            <workspace>Soundtest:529</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="68d45fe3-f755-4401-bb0a-bccc5a8f7761">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="fb1ae4f4-b153-4875-93b6-7d083fb8784e">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:529</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="63d4ce63-decc-4ba7-bb3e-869c60f8c0ac">
      <blockPath>Soundtest/Traffic System/Tr_Sys_1/Post_2/Add_wrap/Compare To Constant</blockPath>
      <id>Soundtest:529:215</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="921554a7-0431-4f32-8362-33a88e0e5e41">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="c52bdaa1-19ab-4d0c-ba05-f3b39a432a3c">
          <expression>&gt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="361ec0b6-d60a-4ed1-9bd9-2a6b0e9eaa13">
          <evaluate>true</evaluate>
          <expression>threshold_add</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="bfe961b6-5d08-44a8-829c-932190d2e871">
            <name>threshold_add</name>
            <value></value>
            <workspace>Soundtest:529</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b2c5429b-1155-4fe1-b619-33ebfb6eec8a">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="64627d8d-c492-45c6-967a-f47419ca024d">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:529</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="6aa32279-de3f-44e0-b42f-e8dfc4b55641">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Comparator_1</blockPath>
      <id>Soundtest:543</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="4c4b1095-81a9-43b1-89cb-df9b0cd5a378">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="84c4ba30-cc60-4ef3-95d9-d46eaad93299">
          <expression>&gt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5c2d96b5-6793-4496-9041-8a447025ea49">
          <evaluate>true</evaluate>
          <expression>16</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="6ff10c2b-aa63-4fe9-96c2-a84a064ee483">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="37cd051a-0aaa-42d6-9202-0c55f5ad006c">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="a4d60425-de72-4fc9-a595-2e74e0dc525e">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Comparator_2</blockPath>
      <id>Soundtest:544</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="f98fd23f-c1a6-4363-bbff-9c101343c45b">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8e8d9f56-95a9-4719-afbf-749b070e8ee3">
          <expression>&lt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="10e38f03-efe8-4e73-b07d-bf06099f5eda">
          <evaluate>true</evaluate>
          <expression>23</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9358a657-9346-490b-913e-9588be1ffc96">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="0b42d651-6918-4aab-a468-dc213b667e73">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="614fd111-fccc-487a-ae14-a4d28aba3d85">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Comparator_3</blockPath>
      <id>Soundtest:545</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="b8f59768-c784-4f3f-80da-90a48378b3ee">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="edda5a54-09aa-4eef-a847-24b3ad076159">
          <expression>&lt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="01a8bbb8-65e2-4722-aa6e-509a093c4220">
          <evaluate>true</evaluate>
          <expression>17</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="eb6941f3-8fa7-43bd-84dc-5cfa4fde0d31">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="23e97365-4ca9-4efa-b7ab-f315d90fd5e5">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="02daf400-f781-4079-9358-79765398e3a3">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Comparator_4</blockPath>
      <id>Soundtest:546</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="bae01afa-8959-4f50-83c6-d50a9dd98562">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="db87e7be-365c-4378-b28c-10f023710d15">
          <expression>&lt;=</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9eb5eb03-36b5-4864-9568-020b8752fad3">
          <evaluate>true</evaluate>
          <expression>25</expression>
          <isTunable>true</isTunable>
          <name>const</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4afba4a1-b45c-43da-acf3-48047d85c424">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f0803c3b-f276-4fd0-ac16-3cec5e9dce1e">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="11df4dc2-c216-45fe-a162-8f9f5e2cbf62">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Post_3</blockPath>
      <childrenIds>Soundtest:551:213</childrenIds>
      <childrenIds>Soundtest:551:215</childrenIds>
      <id>Soundtest:551</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="fcabf222-a528-42c8-9e7d-4284a8593c10">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="e4c0ec54-2420-4564-8111-ce115fc5d0a2">
          <name>freerun</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="9c9160fd-42dd-4f68-9334-dbee3e5b1fe2">
          <name>maxval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAADdA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="9cc34707-dd20-414e-999b-9580cf515845">
          <name>minval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="cae1e1d6-4bda-47cd-b4e6-764feceddcdd">
          <name>modulo</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="f36dc8fb-49fc-4ad7-9da4-74fd4326a979">
          <name>modval</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAHBA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="f936a4f7-1b0f-4c03-ab32-3df9ae3a9452">
          <name>threshold_add</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAA4G9A</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9afe890c-52da-443c-a160-d9dc959f21cc">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <isTunable>true</isTunable>
          <name>CountType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a978fec0-3557-4c59-8ce0-2729aaae328a">
          <evaluate>true</evaluate>
          <expression>16</expression>
          <isTunable>true</isTunable>
          <name>CountInit</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2d2f1af4-d0a9-4d3a-90e1-425d8b6b67ae">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountStep</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a9eb67f6-78bb-42c6-999c-f8936ab0785a">
          <evaluate>true</evaluate>
          <expression>23</expression>
          <isTunable>true</isTunable>
          <name>CountMax</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ab9400d5-5209-4006-bba5-f33de2c5d68c">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountFromType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="52ecfa06-7819-41b1-a0a8-3d3656bbdfc1">
          <evaluate>true</evaluate>
          <expression>16</expression>
          <isTunable>true</isTunable>
          <name>CountFrom</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="03664c0e-4e6e-4631-a7d3-c33eb29b655a">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountResetPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ed508437-2507-43fc-8135-29e4df74e6f5">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountLoadPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2fdccd25-1e17-43ff-a231-8378dae04628">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountEnbPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5d251a5b-3635-449c-bb33-f815f75a010a">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountDirPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2b2b76c4-4acf-4bbd-9e73-f8d3184234c3">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountHitOutputPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="16b6a917-3c9f-4766-837a-9654a3f7217d">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b10861c0-5320-43ea-964e-4ef59164ab19">
          <evaluate>true</evaluate>
          <expression>8</expression>
          <isTunable>true</isTunable>
          <name>CountWordLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ed85428d-8023-4c1f-8f11-ab4e088d746f">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFracLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="41864f0c-7d6f-40f8-9feb-b40d47c72988">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountSampTime</name>
        </dialogParameters>
        <initializationCode>issigned = double(strcmp(get_param(gcb, &apos;CountDataType&apos;), &apos;Signed&apos;));
[maxval_sc,freerun,  samptime, threshold_add, modval,  minval_sc, modulo] = hdlblkmask_counter;</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="71e010c2-5bfd-49bf-8f39-77fd98f7cad5">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Post_3/Sub_wrap/Compare To Constant</blockPath>
      <id>Soundtest:551:213</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="17665a14-e589-4718-9368-f592d720c9fc">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="afe4727d-8978-44f0-8dae-3fbeb3e9a3ca">
          <expression>&lt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2100f79d-1042-43ba-b569-449ca793d5bc">
          <evaluate>true</evaluate>
          <expression>minval_sc</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="fce0d929-b45a-4521-a4e6-912de75b3caa">
            <name>minval_sc</name>
            <value></value>
            <workspace>Soundtest:551</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f7485cfc-cb2d-448a-aa5d-4f0b5beb2a0b">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2476da31-84ae-46ba-ba21-576651631016">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:551</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="9fa27583-f538-4068-a720-6d52033c0ce3">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Post_3/Add_wrap/Compare To Constant</blockPath>
      <id>Soundtest:551:215</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="b674b5dd-bb94-402b-aba7-5f9399a85651">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="382845f9-8edc-4a09-ae4e-5d62d0143af5">
          <expression>&gt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8edb0b9d-f8ec-4ef2-9a5a-6a2be523a599">
          <evaluate>true</evaluate>
          <expression>threshold_add</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="f043dbc1-0bfe-4341-9b60-575f6c56ac36">
            <name>threshold_add</name>
            <value></value>
            <workspace>Soundtest:551</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7a41a6d7-3764-4ec3-a0a1-f8912c984911">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="38dbaa3b-b670-4e21-9b6c-bf40a0489fdb">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:551</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="4cc21149-8dba-4252-830c-9546eeea048e">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Post_4</blockPath>
      <childrenIds>Soundtest:552:213</childrenIds>
      <childrenIds>Soundtest:552:215</childrenIds>
      <id>Soundtest:552</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="2b766d8e-980e-4eda-965c-57cd0e3695fa">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="390cc86a-1664-4205-92d4-e7a2ff07346d">
          <name>freerun</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="6e57f820-f719-460f-a62a-74d0f72886ef">
          <name>maxval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAD9A</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="68351542-a61f-4464-9c27-411ef3091d49">
          <name>minval_sc</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="b30854ed-dbe3-43f3-a187-a72cceba505b">
          <name>modulo</name>
          <value>AAFJTQAAAAAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="a6de1de4-3b40-4552-adf2-a5af742c7cee">
          <name>modval</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAHBA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="6539c9a7-ddf7-4d95-b7f8-c83166fe7ec3">
          <name>threshold_add</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAA4G9A</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="bc73c517-641c-48ad-9700-e672d663d4f5">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <isTunable>true</isTunable>
          <name>CountType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="c537e145-d719-406c-aa57-a5891a4e74a5">
          <evaluate>true</evaluate>
          <expression>24</expression>
          <isTunable>true</isTunable>
          <name>CountInit</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8c1de147-7993-461c-b507-ef61d0d798f1">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountStep</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="0796e919-9586-4831-b7f1-c081d619f85c">
          <evaluate>true</evaluate>
          <expression>31</expression>
          <isTunable>true</isTunable>
          <name>CountMax</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f32abc90-ea61-4824-b8d6-a1be8d077354">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountFromType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="690f5a14-8cc2-43f1-b990-e74857627798">
          <evaluate>true</evaluate>
          <expression>24</expression>
          <isTunable>true</isTunable>
          <name>CountFrom</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="0203c04c-8fe8-4d04-b0d9-179b133a950e">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountResetPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="f78d8d45-704d-410a-9a13-6c44dad7d7e6">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountLoadPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="11f8e4ed-4f6e-4c3c-a533-a2000f3897c7">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountEnbPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="286ca4c9-7aff-4113-914d-a334b70254ac">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountDirPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e8e470ba-041a-4bd6-9bd2-8549b1cae334">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountHitOutputPort</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7f0dcc76-93bb-4f6d-8357-8ceb1b4adfb6">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d548de72-8f77-414e-a54a-1b4aebf5d945">
          <evaluate>true</evaluate>
          <expression>8</expression>
          <isTunable>true</isTunable>
          <name>CountWordLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="55363aca-6b3c-4aec-a0a1-a859821f5631">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <isTunable>true</isTunable>
          <name>CountFracLen</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b31ab2ff-cf48-493e-8534-afe64af3696f">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <isTunable>true</isTunable>
          <name>CountSampTime</name>
        </dialogParameters>
        <initializationCode>issigned = double(strcmp(get_param(gcb, &apos;CountDataType&apos;), &apos;Signed&apos;));
[maxval_sc,freerun,  samptime, threshold_add, modval,  minval_sc, modulo] = hdlblkmask_counter;</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="82f338d7-8dfc-48b5-a389-243d54105b42">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Post_4/Sub_wrap/Compare To Constant</blockPath>
      <id>Soundtest:552:213</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="200416c1-6c38-4b55-a3e6-1d8fd8418dca">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="bb0c56c1-fb31-458b-8a4d-6df8f59fbf37">
          <expression>&lt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e7a41b94-6bd0-475d-b645-f838bc9d05be">
          <evaluate>true</evaluate>
          <expression>minval_sc</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="46f4a7b4-409f-45ed-9a62-ec1cd77ed02a">
            <name>minval_sc</name>
            <value></value>
            <workspace>Soundtest:552</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7fabd341-af58-4ee8-bf1b-c5af01d3f275">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="cade1100-10e9-423c-a59c-4e0f885da74a">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:552</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="13b6b1f6-5476-41e3-9142-260b05e36b55">
      <blockPath>Soundtest/Traffic System/Tr_Sys_2/Post_4/Add_wrap/Compare To Constant</blockPath>
      <id>Soundtest:552:215</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="339a6a10-1bcc-4abb-af1a-9a303227f1c0">
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="85400ce0-14d1-4003-b934-d02e7c917923">
          <expression>&gt;</expression>
          <name>relop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="532ac16f-9f60-4cf7-8271-3352d701627b">
          <evaluate>true</evaluate>
          <expression>threshold_add</expression>
          <isTunable>true</isTunable>
          <name>const</name>
          <referencedVariables type="slsa.mm.maskTree.Variable" uuid="db943f95-b6bd-48dd-81bd-a8e2c113c37e">
            <name>threshold_add</name>
            <value></value>
            <workspace>Soundtest:552</workspace>
          </referencedVariables>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e3ca2424-6869-45a4-b220-5cc8041bb4ac">
          <expression>boolean</expression>
          <name>OutDataTypeStr</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5c7ef212-9d96-4f49-a854-2148c9f1ed21">
          <expression>on</expression>
          <name>ZeroCross</name>
        </dialogParameters>
        <initializationCode>blkName = gcb;

if strcmp(get_param(gcbh,&apos;OutDataTypeStr&apos;),&apos;boolean&apos;)
	setValue = &apos;boolean&apos;;
else
	setValue = &apos;fixdt(0, 8)&apos;;
end

set_param([blkName,&apos;/Compare&apos;],&apos;relop&apos;,relop, ...
	&apos;OutDataTypeStr&apos;, setValue, &apos;ZeroCross&apos;, ZeroCross);

str = [relop,&apos; C&apos;]; %default

const_str = get_param(blkName, &apos;const&apos;);
const_val = str2num(const_str);

if isempty(const_val) %#ok&lt;ST2NM&gt;
    %Expression/Variable
    str = [relop, &apos; &apos;, strtrim(const_str)];
else
    if length(const_val) == 1 
        if Simulink.data.isSupportedEnumClass(class(const_val))
            % Special Handling for Enumerations
            if Simulink.data.getEnumTypeInfo(class(const_val), &apos;AddClassNameToEnumNames&apos;)
                str = [relop, &apos; &apos;, strtrim(const_str)];
            else
                str = [relop, &apos; &apos;, char(const_val)];
            end
        elseif(isfloat(const_val) || isinteger(const_val) || islogical(const_val)) 
                str = [relop, &apos; &apos;, num2str(const_val)];
        end
    end
end</initializationCode>
        <skipInitializationCode>true</skipInitializationCode>
      </masks>
      <parentId>Soundtest:552</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="173ee3a0-8ad5-4f86-8296-70644607fbcf">
      <blockPath>Soundtest/Input_Sensors/Sensor_2</blockPath>
      <id>Soundtest:66</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="8bd21a7c-525d-4727-9a88-4d00d78547c6">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="60afa7b7-8cd1-48fc-92a0-4f94a49622fc">
          <name>SFcnInputFilename</name>
          <value>AAFJTQAAAAAOAAAAeAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABBAAAAAQAAAAAAAAAQAAAAQQAAAEQ6XFRlY2huaWNhbCBTb2Z0d2FyZXNcTWFqb3QgUHJvamVjdFxbTU9OT11UcmFmZmljIE5vaXNlLTMyMGsubXAzAAAAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="83dd095d-2080-49a3-aac7-51287d771628">
          <name>arConverterPath</name>
          <value>AAFJTQAAAAAOAAAAiAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABTAAAAAQAAAAAAAAAQAAAAUwAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb3NsY29udmVydGVyAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="76fe353d-5902-463e-8d41-f09094546a81">
          <name>computedAudioFrameSize</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="7832176e-6d13-41fe-a46f-aacc4c347382">
          <name>multimediaFileInfo</name>
          <value>AAFJTQAAAAAOAAAAoAQAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAFAAQAEwAAAAEAAADkAAAAaGFzQXVkaW8AAAAAAAAAAAAAAGhhc1ZpZGVvAAAAAAAAAAAAAABhdWRpb1BsdWdpblBhdGgAAAAAYXVkaW9Db252ZXJ0ZXJQYXRoAGF1ZGlvU2FtcGxlUmF0ZQAAAABhdWRpb051bUNoYW5uZWxzAAAAYXVkaW9Gb3JtYXQAAAAAAAAAAGlzQXVkaW9Db21wcmVzc2VkAABhdWRpb0JpdFJhdGUAAAAAAAAAYXVkaW9OdW1CaXRzAAAAAAAAAGF1ZGlvSXNGbG9hdAAAAAAAAAB1c2VNTVJlYWRlcgAAAAAAAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADAAAAAGAAAACAAAAAkCAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAAAgABAAAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAADgAAAIgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAAUwAAAAEAAAAAAAAAEAAAAFMAAABDOlxQcm9ncmFtIEZpbGVzXE1BVExBQlxSMjAyMWFcdG9vbGJveFxzaGFyZWRcbXVsdGltZWRpYVxiaW5cd2luNjRcYXVkaW9zbGNvbnZlcnRlcgAAAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAAAAAAAAAHDnQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAA8D8OAAAAMAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAADAAAAAQAAAAAAAAAQAAMATVAzAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAACuR+F6FC5WQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAAQEAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAQAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="2e75b5b4-b3ce-48a7-ac46-fae31658bee7">
          <name>outputStreamsStr</name>
          <value>AAFJTQAAAAAOAAAAQAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAAKAAAAAQAAAAAAAAAQAAAACgAAAEF1ZGlvIG9ubHkAAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="7750986b-efe2-4cf9-a69f-de41fb58bfb7">
          <name>pluginPaths</name>
          <value>AAFJTQAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="b9d7cb86-b6bf-472f-9986-95c892ac84f6">
          <name>readRangeEnd</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAOBD</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="5004b1fc-b307-4f83-ade0-a0aa713a2179">
          <name>readRangeStart</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a623ff45-a28b-40d7-bf78-5b637892fa51">
          <expression>D:\Technical Softwares\Majot Project\[MONO]Traffic Noise-320k.mp3</expression>
          <name>inputFilename</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8a7d2c21-e335-4939-b282-b0fa3ba31487">
          <evaluate>true</evaluate>
          <expression>[1 Inf]</expression>
          <name>readRange</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e3a65298-19b4-476c-a46b-d240840687fe">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>loop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="baec9355-b4fc-46d5-98e1-bceda1bab7af">
          <evaluate>true</evaluate>
          <expression>inf</expression>
          <name>numPlays</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4f6dc40e-d6b6-462c-a3c2-3b73f38da5e7">
          <expression>Audio only</expression>
          <name>outputStreams</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e22c03d9-1943-4b4f-90de-d545e15f6b5a">
          <expression>single</expression>
          <name>videoDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="cd2fd9c7-385b-4e3f-8b3f-ab0e4b1fea2b">
          <expression>double</expression>
          <name>audioDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="db6c5fd9-bddd-44e4-a8f8-bf03cb6067cd">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>inheritSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ef27b196-d606-464f-b997-3cd756debd51">
          <evaluate>true</evaluate>
          <expression>1/30</expression>
          <name>userDefinedSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5e9f5ac7-edaa-4950-b57e-245eb6e36542">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>noAudioOutput</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b84dcad9-3fe0-4851-8415-439f2411a52d">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>isIntensityVideo</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="72e09191-4e5d-42e9-8eaa-51fba4e4d0f6">
          <expression>RGB</expression>
          <name>fourcc</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="79fe57b2-cb0e-4e3d-a840-83ccec87b776">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <name>colorVideoFormat</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2c12dc1f-6ef9-4519-8749-fa2f4d8b71c9">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>outputEOF</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2e914051-de6f-41ed-b0b4-42a0cca81ab5">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>dataOrg</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="568b8988-b534-4f36-9cb8-41006ce3c373">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>audioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2bdf9a57-3faa-4935-9fcc-1b021330e1ab">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>computeAudioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="dc246718-5a0e-483f-905c-f91158c57916">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>outSamplingMode</name>
        </dialogParameters>
        <initializationCode>blk = gcb;
[SFcnInputFilename multimediaFileInfo computedAudioFrameSize iconString fourcc pluginPaths arConverterPath, outputStreamsStr,readRangeStart,readRangeEnd] = ...
    dspmaskFromMultimediaFile(&apos;init&apos;, blk, userDefinedSampleTime);
set_param(blk, &apos;MaskDisplay&apos;, iconString);</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="08593b80-bce5-48a7-8d78-f8e58c8c39c1">
      <blockPath>Soundtest/Input_Sensors/Sensor_3</blockPath>
      <id>Soundtest:70</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="a8f68ea3-5338-4071-9df8-c204ab7a6ca0">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="eb5ece78-b652-4617-80d6-6695b1b57146">
          <name>SFcnInputFilename</name>
          <value>AAFJTQAAAAAOAAAAeAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABBAAAAAQAAAAAAAAAQAAAAQQAAAEQ6XFRlY2huaWNhbCBTb2Z0d2FyZXNcTWFqb3QgUHJvamVjdFxbTU9OT11UcmFmZmljIE5vaXNlLTMyMGsubXAzAAAAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="b349257d-e3a8-47da-b1d8-6f820838a2c9">
          <name>arConverterPath</name>
          <value>AAFJTQAAAAAOAAAAiAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABTAAAAAQAAAAAAAAAQAAAAUwAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb3NsY29udmVydGVyAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="cf380a7e-53e3-42b6-a1eb-3dddde877d57">
          <name>computedAudioFrameSize</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="9d52ea9f-c888-41b4-90d0-7b33236f1d0b">
          <name>multimediaFileInfo</name>
          <value>AAFJTQAAAAAOAAAAoAQAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAFAAQAEwAAAAEAAADkAAAAaGFzQXVkaW8AAAAAAAAAAAAAAGhhc1ZpZGVvAAAAAAAAAAAAAABhdWRpb1BsdWdpblBhdGgAAAAAYXVkaW9Db252ZXJ0ZXJQYXRoAGF1ZGlvU2FtcGxlUmF0ZQAAAABhdWRpb051bUNoYW5uZWxzAAAAYXVkaW9Gb3JtYXQAAAAAAAAAAGlzQXVkaW9Db21wcmVzc2VkAABhdWRpb0JpdFJhdGUAAAAAAAAAYXVkaW9OdW1CaXRzAAAAAAAAAGF1ZGlvSXNGbG9hdAAAAAAAAAB1c2VNTVJlYWRlcgAAAAAAAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADAAAAAGAAAACAAAAAkCAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAAAgABAAAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAADgAAAIgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAAUwAAAAEAAAAAAAAAEAAAAFMAAABDOlxQcm9ncmFtIEZpbGVzXE1BVExBQlxSMjAyMWFcdG9vbGJveFxzaGFyZWRcbXVsdGltZWRpYVxiaW5cd2luNjRcYXVkaW9zbGNvbnZlcnRlcgAAAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAAAAAAAAAHDnQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAA8D8OAAAAMAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAADAAAAAQAAAAAAAAAQAAMATVAzAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAACuR+F6FC5WQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAAQEAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAQAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="5201fae2-b324-421e-837a-82a3c496e6c7">
          <name>outputStreamsStr</name>
          <value>AAFJTQAAAAAOAAAAQAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAAKAAAAAQAAAAAAAAAQAAAACgAAAEF1ZGlvIG9ubHkAAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="e066cf26-9089-4348-b237-63cdb2903600">
          <name>pluginPaths</name>
          <value>AAFJTQAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="6722a131-70e9-4b43-b05b-71043d454ce0">
          <name>readRangeEnd</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAOBD</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="1d002e96-d05d-4525-9827-80d5da728175">
          <name>readRangeStart</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4dc29f2c-b237-4293-92b3-f8328ea94acb">
          <expression>D:\Technical Softwares\Majot Project\[MONO]Traffic Noise-320k.mp3</expression>
          <name>inputFilename</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7555892c-fe8b-4b5e-be3e-d65392e587d6">
          <evaluate>true</evaluate>
          <expression>[1 Inf]</expression>
          <name>readRange</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d20b84b7-961a-486b-a555-bb351e329428">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>loop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4feb88b7-30fa-4738-8053-9a17f9484415">
          <evaluate>true</evaluate>
          <expression>inf</expression>
          <name>numPlays</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="e1e5e740-6527-4896-b22f-c271e7e4ec4e">
          <expression>Audio only</expression>
          <name>outputStreams</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2a112a9f-99cc-4392-bb14-e522611f20ca">
          <expression>single</expression>
          <name>videoDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8f756337-9591-4e04-85ab-2b37e9c84dd4">
          <expression>double</expression>
          <name>audioDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b804bbda-d5ac-49c2-a76b-0c569f744015">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>inheritSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="fcd5c5d6-3062-4c41-854b-2a23babf7dd5">
          <evaluate>true</evaluate>
          <expression>1/30</expression>
          <name>userDefinedSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="c7fcb130-8832-46af-8872-b55dfc85a731">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>noAudioOutput</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="89b3aa3d-88a5-449b-b3e8-3f0c1ab2c99e">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>isIntensityVideo</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="5b076a33-96a4-4e32-ab54-1c8f1a917fad">
          <expression>RGB</expression>
          <name>fourcc</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9eec04bb-a9d4-4bf5-939e-9ec61e3d2cf0">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <name>colorVideoFormat</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="c31f88b5-d5bc-49fa-b271-d608de66546f">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>outputEOF</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="a9ec5a0f-554d-4693-965f-a566b7451230">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>dataOrg</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="03d15401-923e-40f0-b3ed-6f58652497a4">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>audioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="2793b02c-f4e0-454e-b278-7317c37177f5">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>computeAudioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8c65cf68-2918-48e2-9f3c-36af87091f4a">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>outSamplingMode</name>
        </dialogParameters>
        <initializationCode>blk = gcb;
[SFcnInputFilename multimediaFileInfo computedAudioFrameSize iconString fourcc pluginPaths arConverterPath, outputStreamsStr,readRangeStart,readRangeEnd] = ...
    dspmaskFromMultimediaFile(&apos;init&apos;, blk, userDefinedSampleTime);
set_param(blk, &apos;MaskDisplay&apos;, iconString);</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="a2da85c9-2801-4d90-b845-802375eea3c7">
      <blockPath>Soundtest/Input_Sensors/Sensor_4</blockPath>
      <id>Soundtest:73</id>
      <masks type="slsa.mm.maskTree.Mask" uuid="a1157b0d-abac-4717-9e44-0357d399dfd2">
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="af7c19b3-016c-4307-9ff3-5073947d851f">
          <name>SFcnInputFilename</name>
          <value>AAFJTQAAAAAOAAAAeAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABBAAAAAQAAAAAAAAAQAAAAQQAAAEQ6XFRlY2huaWNhbCBTb2Z0d2FyZXNcTWFqb3QgUHJvamVjdFxbTU9OT11UcmFmZmljIE5vaXNlLTMyMGsubXAzAAAAAAAAAA==</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="3166cb6d-31c5-4e8e-b339-4e612c0d4b7c">
          <name>arConverterPath</name>
          <value>AAFJTQAAAAAOAAAAiAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABTAAAAAQAAAAAAAAAQAAAAUwAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb3NsY29udmVydGVyAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="e73dc459-d915-44de-a9e0-c31933a227d4">
          <name>computedAudioFrameSize</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="788cd0a1-33ff-4bb6-a765-bab7c780a896">
          <name>multimediaFileInfo</name>
          <value>AAFJTQAAAAAOAAAAoAQAAAYAAAAIAAAAAgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAFAAQAEwAAAAEAAADkAAAAaGFzQXVkaW8AAAAAAAAAAAAAAGhhc1ZpZGVvAAAAAAAAAAAAAABhdWRpb1BsdWdpblBhdGgAAAAAYXVkaW9Db252ZXJ0ZXJQYXRoAGF1ZGlvU2FtcGxlUmF0ZQAAAABhdWRpb051bUNoYW5uZWxzAAAAYXVkaW9Gb3JtYXQAAAAAAAAAAGlzQXVkaW9Db21wcmVzc2VkAABhdWRpb0JpdFJhdGUAAAAAAAAAYXVkaW9OdW1CaXRzAAAAAAAAAGF1ZGlvSXNGbG9hdAAAAAAAAAB1c2VNTVJlYWRlcgAAAAAAAAAAAAAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADAAAAAGAAAACAAAAAkCAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAAAgABAAAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAADgAAAIgAAAAGAAAACAAAAAQAAAAAAAAABQAAAAgAAAABAAAAUwAAAAEAAAAAAAAAEAAAAFMAAABDOlxQcm9ncmFtIEZpbGVzXE1BVExBQlxSMjAyMWFcdG9vbGJveFxzaGFyZWRcbXVsdGltZWRpYVxiaW5cd2luNjRcYXVkaW9zbGNvbnZlcnRlcgAAAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAAAAAAAAAHDnQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAA8D8OAAAAMAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAADAAAAAQAAAAAAAAAQAAMATVAzAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAADgAAADgAAAAGAAAACAAAAAYAAAAAAAAABQAAAAgAAAABAAAAAQAAAAEAAAAAAAAACQAAAAgAAACuR+F6FC5WQA4AAAA4AAAABgAAAAgAAAAGAAAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAkAAAAIAAAAAAAAAAAAQEAOAAAAMAAAAAYAAAAIAAAACQIAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAACAAEAAQAAAA4AAAAwAAAABgAAAAgAAAAJAgAAAAAAAAUAAAAIAAAAAQAAAAEAAAABAAAAAAAAAAIAAQABAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="c50da473-3beb-4b40-b70a-c7df1c5d43ba">
          <name>outputStreamsStr</name>
          <value>AAFJTQAAAAAOAAAAQAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAAAKAAAAAQAAAAAAAAAQAAAACgAAAEF1ZGlvIG9ubHkAAAAAAAA=</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="59cb934c-e1e5-4094-bf52-6ecbcfa158b9">
          <name>pluginPaths</name>
          <value>AAFJTQAAAAAOAAAAmAAAAAYAAAAIAAAABAAAAAAAAAAFAAAACAAAAAEAAABkAAAAAQAAAAAAAAAQAAAAZAAAAEM6XFByb2dyYW0gRmlsZXNcTUFUTEFCXFIyMDIxYVx0b29sYm94XHNoYXJlZFxtdWx0aW1lZGlhXGJpblx3aW42NFxhdWRpb1xhdWRpb2ZpbGVtZnJlYWRlcnBsdWdpbi5kbGwAAAAA</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="d30f94ed-7a0e-40ea-a11f-410a9639fe8b">
          <name>readRangeEnd</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAOBD</value>
        </cachedVariables>
        <cachedVariables type="slsa.mm.maskTree.Variable" uuid="1d52753f-90f3-4caf-86c5-2d9f0f398370">
          <name>readRangeStart</name>
          <value>AAFJTQAAAAAOAAAAOAAAAAYAAAAIAAAABgAAAAAAAAAFAAAACAAAAAEAAAABAAAAAQAAAAAAAAAJAAAACAAAAAAAAAAAAPA/</value>
        </cachedVariables>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9599c409-04b8-4e22-a30d-4591d73b9bd1">
          <expression>D:\Technical Softwares\Majot Project\[MONO]Traffic Noise-320k.mp3</expression>
          <name>inputFilename</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8b780400-d2af-4f4c-bce4-aab45d7a5956">
          <evaluate>true</evaluate>
          <expression>[1 Inf]</expression>
          <name>readRange</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="9b3b36a1-b561-4b10-aae4-f1269ec0b3fc">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>loop</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="cba39d3a-99ab-41c1-bef6-0420376910e1">
          <evaluate>true</evaluate>
          <expression>inf</expression>
          <name>numPlays</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="4cd63457-ff58-424a-8985-d8c0a7583f21">
          <expression>Audio only</expression>
          <name>outputStreams</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="64236d64-5779-4aff-8b0d-c1ddda463a60">
          <expression>single</expression>
          <name>videoDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d089f469-ca7e-4902-8975-26517e19ea06">
          <expression>double</expression>
          <name>audioDataType</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="3bb557a2-ed02-4853-8325-dd264b3ab509">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>inheritSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="8c9e396e-945c-4b81-a3ca-388ced5e9ad2">
          <evaluate>true</evaluate>
          <expression>1/30</expression>
          <name>userDefinedSampleTime</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="d442c65f-ca5f-44eb-817a-19ab4ba252d6">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>noAudioOutput</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="7d5e8a48-98d8-47f3-9bbf-966d9bfff53b">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>isIntensityVideo</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="cc8c08b2-130e-4f40-8d5a-57ecc039e5d0">
          <expression>RGB</expression>
          <name>fourcc</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="96ae74df-8e32-48b4-abfe-dd9b64abbfe4">
          <evaluate>true</evaluate>
          <expression>2</expression>
          <name>colorVideoFormat</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="04cbba47-6d06-411f-b18e-cc86dffe9285">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>outputEOF</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="24552454-6375-48ed-8a9f-e7f4316907bb">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>dataOrg</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="1c9afa8b-8e04-46b9-ba82-9c7dd3360737">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>audioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="ef562013-2c45-40d8-a59a-0eba0f2b738f">
          <evaluate>true</evaluate>
          <expression>0</expression>
          <name>computeAudioFrameSize</name>
        </dialogParameters>
        <dialogParameters type="slsa.mm.maskTree.DialogParameterInfo" uuid="b603bb12-449f-42b2-9429-7dc09d43f1d7">
          <evaluate>true</evaluate>
          <expression>1</expression>
          <name>outSamplingMode</name>
        </dialogParameters>
        <initializationCode>blk = gcb;
[SFcnInputFilename multimediaFileInfo computedAudioFrameSize iconString fourcc pluginPaths arConverterPath, outputStreamsStr,readRangeStart,readRangeEnd] = ...
    dspmaskFromMultimediaFile(&apos;init&apos;, blk, userDefinedSampleTime);
set_param(blk, &apos;MaskDisplay&apos;, iconString);</initializationCode>
      </masks>
      <parentId>root</parentId>
    </maskedBlocks>
    <maskedBlocks type="slsa.mm.maskTree.MaskedBlock" uuid="6201dc2c-6a9f-4fa8-96bf-c680d6901816">
      <childrenIds>Soundtest:134</childrenIds>
      <childrenIds>Soundtest:142</childrenIds>
      <childrenIds>Soundtest:150</childrenIds>
      <childrenIds>Soundtest:2</childrenIds>
      <childrenIds>Soundtest:24</childrenIds>
      <childrenIds>Soundtest:5</childrenIds>
      <childrenIds>Soundtest:501</childrenIds>
      <childrenIds>Soundtest:514</childrenIds>
      <childrenIds>Soundtest:520</childrenIds>
      <childrenIds>Soundtest:521</childrenIds>
      <childrenIds>Soundtest:522</childrenIds>
      <childrenIds>Soundtest:523</childrenIds>
      <childrenIds>Soundtest:528</childrenIds>
      <childrenIds>Soundtest:529</childrenIds>
      <childrenIds>Soundtest:543</childrenIds>
      <childrenIds>Soundtest:544</childrenIds>
      <childrenIds>Soundtest:545</childrenIds>
      <childrenIds>Soundtest:546</childrenIds>
      <childrenIds>Soundtest:551</childrenIds>
      <childrenIds>Soundtest:552</childrenIds>
      <childrenIds>Soundtest:66</childrenIds>
      <childrenIds>Soundtest:70</childrenIds>
      <childrenIds>Soundtest:73</childrenIds>
      <id>root</id>
    </maskedBlocks>
    <flags type="slsa.mm.maskTree.MaskTreeFlags" uuid="172abc65-ae4a-4496-b846-3d15b8009a6b"/>
  </slsa.mm.maskTree.MaskTree>
</MF0>